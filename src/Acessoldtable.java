/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author pavan
 */
import com.sun.org.apache.xerces.internal.impl.dv.util.Base64;
import java.awt.Image;
import java.io.InputStream;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sql.rowset.serial.SerialBlob;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
public class Acessoldtable extends javax.swing.JFrame {

    /**
     * Creates new form Acessoldtable
     */
    Registeration reg=new Registeration();
    //Connection conn=null;
    ResultSet rs=null,rs1=null;
    PreparedStatement ps=null;
    PreparedStatement ps1=null;
    String img64str = "null";
    Blob image = null;
    String str;
     
    static String usr1=new String();
   public void fv1(String str)
    {
        usr1=str;
        System.out.print("usrname Saved   "+usr1);
    
    }
   
    public Acessoldtable() throws ClassNotFoundException {
        initComponents();
        updatetable();
        //updatetable();
        
        
        
    }
    public void updatetable() throws ClassNotFoundException
    {
         String url = "jdbc:derby://localhost:1527/photodb";
        String user = "pavan";
        String password = "pa1dperfect";
        try{
            Class.forName("org.apache.derby.jdbc.ClientDriver");
            Connection conn = DriverManager.getConnection(url, user, password);
            String sql="select BLOB_1  from cs_register where usr_name=? ";
            ps=conn.prepareStatement(sql);
            ps.setString(1,usr1);
           rs=ps.executeQuery();
          // Info.setModel(DbUtils.resultSetToTableModel(rs));
           if(rs.next())
           {
               Blob imageBlob = rs.getBlob("BLOB_1");
              // InputStream binaryStream = imageBlob.getBinaryStream(0, imageBlob.length()); 
               byte[] imageBytes1 = imageBlob.getBytes(1, (int) imageBlob.length());
               format=new ImageIcon(imageBytes1);
               jbl.setIcon(format);
           }
           
                //JOptionPane.showMessageDialog(null,"NO FILES EXIST ","**USER NOT EXISTS**",JOptionPane.INFORMATION_MESSAGE);
            
        }
        catch(SQLException ex ){
           JOptionPane.showMessageDialog(null,"Username error ","**USER NOT EXISTS**",JOptionPane.INFORMATION_MESSAGE);
            //JOptionPane.showMessageDialog(null, ex);
        }catch(NullPointerException ex ){
            JOptionPane.showMessageDialog(null,"NO FILES IN THE ACCOUNT ","**USER NOT EXISTS**",JOptionPane.INFORMATION_MESSAGE);
            //JOptionPane.showMessageDialog(null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jButton1 = new javax.swing.JButton();
        jbl = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("FILE-1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("FILE-2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("FILE-3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("FILE-4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("FILE-5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                .addComponent(jbl, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jbl, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//JLabel jlab=new JLabel();
    public void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //JFileChooser jfc=new JFileChooser();
        String url = "jdbc:derby://localhost:1527/photodb";
        String user = "pavan";
        String password = "pa1dperfect";
        try{
            try {
                Class.forName("org.apache.derby.jdbc.ClientDriver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Acessoldtable.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection conn = DriverManager.getConnection(url, user, password);
            String sql="select BLOB_1  from cs_register where usr_name=? ";
            ps=conn.prepareStatement(sql);
            ps.setString(1,usr1);
           rs=ps.executeQuery();
          // Info.setModel(DbUtils.resultSetToTableModel(rs));
           if(rs.next())
           {
               Blob imageBlob = rs.getBlob("BLOB_1");
              // InputStream binaryStream = imageBlob.getBinaryStream(0, imageBlob.length()); 
               byte[] imageBytes1 = imageBlob.getBytes(1, (int) imageBlob.length());
               format=new ImageIcon(imageBytes1);
               jbl.setIcon(format);
           }
           
                //JOptionPane.showMessageDialog(null,"NO FILES EXIST ","**USER NOT EXISTS**",JOptionPane.INFORMATION_MESSAGE);
            
        }
        catch(SQLException ex ){
           JOptionPane.showMessageDialog(null,"Username error ","**USER NOT EXISTS**",JOptionPane.INFORMATION_MESSAGE);
            //JOptionPane.showMessageDialog(null, ex);
        }catch(NullPointerException ex ){
            JOptionPane.showMessageDialog(null,"NO FILES IN THE ACCOUNT ","**USER NOT EXISTS**",JOptionPane.INFORMATION_MESSAGE);
            //JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         String url = "jdbc:derby://localhost:1527/photodb";
        String user = "pavan";
        String password = "pa1dperfect";
        try{
            try {
                Class.forName("org.apache.derby.jdbc.ClientDriver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Acessoldtable.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection conn = DriverManager.getConnection(url, user, password);
            String sql="select BLOB_2  from cs_register where usr_name=? ";
            ps=conn.prepareStatement(sql);
            ps.setString(1,usr1);
           rs=ps.executeQuery();
          // Info.setModel(DbUtils.resultSetToTableModel(rs));
           if(rs.next())
           {
               Blob imageBlob = rs.getBlob("BLOB_2");
              // InputStream binaryStream = imageBlob.getBinaryStream(0, imageBlob.length()); 
               byte[] imageBytes1 = imageBlob.getBytes(1, (int) imageBlob.length());
               format=new ImageIcon(imageBytes1);
               jbl.setIcon(format);
           }
           
                //JOptionPane.showMessageDialog(null,"NO FILES EXIST ","**USER NOT EXISTS**",JOptionPane.INFORMATION_MESSAGE);
            
        }
        catch(SQLException ex ){
           JOptionPane.showMessageDialog(null,"Username error ","**USER NOT EXISTS**",JOptionPane.INFORMATION_MESSAGE);
            //JOptionPane.showMessageDialog(null, ex);
        }catch(NullPointerException ex ){
            JOptionPane.showMessageDialog(null,"NO FILES IN THE ACCOUNT ","**USER NOT EXISTS**",JOptionPane.INFORMATION_MESSAGE);
            //JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
          String url = "jdbc:derby://localhost:1527/photodb";
        String user = "pavan";
        String password = "pa1dperfect";
        try{
            try {
                Class.forName("org.apache.derby.jdbc.ClientDriver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Acessoldtable.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection conn = DriverManager.getConnection(url, user, password);
            String sql="select BLOB_3  from cs_register where usr_name=? ";
            ps=conn.prepareStatement(sql);
            ps.setString(1,usr1);
           rs=ps.executeQuery();
          // Info.setModel(DbUtils.resultSetToTableModel(rs));
           if(rs.next())
           {
               Blob imageBlob = rs.getBlob("BLOB_3");
              // InputStream binaryStream = imageBlob.getBinaryStream(0, imageBlob.length()); 
               byte[] imageBytes1 = imageBlob.getBytes(1, (int) imageBlob.length());
               format=new ImageIcon(imageBytes1);
               jbl.setIcon(format);
           }
           
                //JOptionPane.showMessageDialog(null,"NO FILES EXIST ","**USER NOT EXISTS**",JOptionPane.INFORMATION_MESSAGE);
            
        }
        catch(SQLException ex ){
           JOptionPane.showMessageDialog(null,"Username error ","**USER NOT EXISTS**",JOptionPane.INFORMATION_MESSAGE);
            //JOptionPane.showMessageDialog(null, ex);
        }catch(NullPointerException ex ){
            JOptionPane.showMessageDialog(null,"NO FILES IN THE ACCOUNT ","**USER NOT EXISTS**",JOptionPane.INFORMATION_MESSAGE);
            //JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
          String url = "jdbc:derby://localhost:1527/photodb";
        String user = "pavan";
        String password = "pa1dperfect";
        try{
            try {
                Class.forName("org.apache.derby.jdbc.ClientDriver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Acessoldtable.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection conn = DriverManager.getConnection(url, user, password);
            String sql="select BLOB_4  from cs_register where usr_name=? ";
            ps=conn.prepareStatement(sql);
            ps.setString(1,usr1);
           rs=ps.executeQuery();
          // Info.setModel(DbUtils.resultSetToTableModel(rs));
           if(rs.next())
           {
               Blob imageBlob = rs.getBlob("BLOB_4");
              // InputStream binaryStream = imageBlob.getBinaryStream(0, imageBlob.length()); 
               byte[] imageBytes1 = imageBlob.getBytes(1, (int) imageBlob.length());
               format=new ImageIcon(imageBytes1);
               jbl.setIcon(format);
           }
           
                //JOptionPane.showMessageDialog(null,"NO FILES EXIST ","**USER NOT EXISTS**",JOptionPane.INFORMATION_MESSAGE);
            
        }
        catch(SQLException ex ){
           JOptionPane.showMessageDialog(null,"Username error ","**USER NOT EXISTS**",JOptionPane.INFORMATION_MESSAGE);
            //JOptionPane.showMessageDialog(null, ex);
        }catch(NullPointerException ex ){
            JOptionPane.showMessageDialog(null,"NO FILES IN THE ACCOUNT ","**USER NOT EXISTS**",JOptionPane.INFORMATION_MESSAGE);
            //JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
          String url = "jdbc:derby://localhost:1527/photodb";
        String user = "pavan";
        String password = "pa1dperfect";
        try{
            try {
                Class.forName("org.apache.derby.jdbc.ClientDriver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Acessoldtable.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection conn = DriverManager.getConnection(url, user, password);
            String sql="select BLOB_5  from cs_register where usr_name=? ";
            ps=conn.prepareStatement(sql);
            ps.setString(1,usr1);
           rs=ps.executeQuery();
          // Info.setModel(DbUtils.resultSetToTableModel(rs));
           if(rs.next())
           {
               Blob imageBlob = rs.getBlob("BLOB_5");
              // InputStream binaryStream = imageBlob.getBinaryStream(0, imageBlob.length()); 
               byte[] imageBytes1 = imageBlob.getBytes(1, (int) imageBlob.length());
               format=new ImageIcon(imageBytes1);
               jbl.setIcon(format);
           }
           
                //JOptionPane.showMessageDialog(null,"NO FILES EXIST ","**USER NOT EXISTS**",JOptionPane.INFORMATION_MESSAGE);
            
        }
        catch(SQLException ex ){
           JOptionPane.showMessageDialog(null,"Username error ","**USER NOT EXISTS**",JOptionPane.INFORMATION_MESSAGE);
            //JOptionPane.showMessageDialog(null, ex);
        }catch(NullPointerException ex ){
            JOptionPane.showMessageDialog(null,"NO FILES IN THE ACCOUNT ","**USER NOT EXISTS**",JOptionPane.INFORMATION_MESSAGE);
            //JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws ClassNotFoundException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Acessoldtable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Acessoldtable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Acessoldtable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Acessoldtable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        Acessoldtable aolt1=new Acessoldtable();
        aolt1.updatetable();
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Acessoldtable().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Acessoldtable.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel jbl;
    // End of variables declaration//GEN-END:variables
public ImageIcon format;



}
